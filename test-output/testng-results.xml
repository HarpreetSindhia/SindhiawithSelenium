<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-28T19:07:05 IST" name="Suite" finished-at="2024-05-28T19:07:24 IST" duration-ms="19292">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidation.LoginErrorValidation()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" name="LoginErrorValidation" class="codewithharry.tests.ErrorValidation"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase Product">
        <method signature="SubmitCartTest.submitCart(java.util.HashMap)[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" name="submitCart" class="codewithharry.tests.SubmitCartTest"/>
      </group> <!-- Purchase Product -->
    </groups>
    <test started-at="2024-05-28T19:07:05 IST" name="ErrorValidationTest" finished-at="2024-05-28T19:07:22 IST" duration-ms="17374">
      <class name="codewithharry.tests.ErrorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:05 IST" name="launchApplication" finished-at="2024-05-28T19:07:10 IST" duration-ms="4706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:10 IST" name="LoginErrorValidation" finished-at="2024-05-28T19:07:11 IST" duration-ms="1271" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at codewithharry.tests.ErrorValidation.LoginErrorValidation(ErrorValidation.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:11 IST" name="closeDriver" finished-at="2024-05-28T19:07:11 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:11 IST" name="launchApplication" finished-at="2024-05-28T19:07:13 IST" duration-ms="2241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:13 IST" name="LoginErrorValidation" finished-at="2024-05-28T19:07:14 IST" duration-ms="733" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at codewithharry.tests.ErrorValidation.LoginErrorValidation(ErrorValidation.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:14 IST" name="closeDriver" finished-at="2024-05-28T19:07:15 IST" duration-ms="1098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:15 IST" name="launchApplication" finished-at="2024-05-28T19:07:17 IST" duration-ms="1455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:17 IST" name="ProductErrorValidation" finished-at="2024-05-28T19:07:22 IST" duration-ms="4565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:codewithharry.tests.ErrorValidation@5f20155b]" started-at="2024-05-28T19:07:22 IST" name="closeDriver" finished-at="2024-05-28T19:07:22 IST" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- codewithharry.tests.ErrorValidation -->
    </test> <!-- ErrorValidationTest -->
    <test started-at="2024-05-28T19:07:05 IST" name="Test" finished-at="2024-05-28T19:07:24 IST" duration-ms="19292">
      <class name="codewithharry.tests.SubmitCartTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:05 IST" name="launchApplication" finished-at="2024-05-28T19:07:10 IST" duration-ms="4378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitCart(java.util.HashMap)[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:10 IST" name="submitCart" data-provider="getData" finished-at="2024-05-28T19:07:14 IST" duration-ms="4182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=harry@Code5, product=IPHONE 13 PRO, email=harrysindhia@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitCart -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:14 IST" name="closeDriver" finished-at="2024-05-28T19:07:14 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:14 IST" name="launchApplication" finished-at="2024-05-28T19:07:15 IST" duration-ms="1275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitCart(java.util.HashMap)[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:15 IST" name="submitCart" data-provider="getData" finished-at="2024-05-28T19:07:21 IST" duration-ms="5802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=harryCode@5, product=ADIDAS ORIGINAL, email=harrycoder@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitCart -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:21 IST" name="closeDriver" finished-at="2024-05-28T19:07:21 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:21 IST" name="launchApplication" finished-at="2024-05-28T19:07:23 IST" duration-ms="2062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderConfirmed()[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:23 IST" name="OrderConfirmed" finished-at="2024-05-28T19:07:24 IST" depends-on-methods="codewithharry.tests.SubmitCartTest.submitCart" duration-ms="791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderConfirmed -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:codewithharry.tests.SubmitCartTest@2438dcd]" started-at="2024-05-28T19:07:24 IST" name="closeDriver" finished-at="2024-05-28T19:07:24 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- codewithharry.tests.SubmitCartTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
